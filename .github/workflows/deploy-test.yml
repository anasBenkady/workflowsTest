name: Publish Packages to Verdaccio

on:
  push:
    branches:
      - development

jobs:
  find_packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      dependencies: ${{ steps.set-matrix.outputs.dependencies }}
    steps:
      - uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - id: set-matrix
        run: |
            echo "Finding package.json files..."
            # Find all package.json files, excluding those in node_modules directories
            PACKAGES=$(find . -name 'package.json' -not -path '*/node_modules/*')

            echo "Found package.json files:"
            echo "$PACKAGES"

            MATRIX_JSON="{\"include\":$(echo "$PACKAGES" | jq -R -s -c 'split("\n")[:-1] | map({"package": (. | rtrimstr("/package.json"))})')}"
            echo "matrix = $MATRIX_JSON"

            PACKAGE_NAMES=()

            # Iterate over each package.json file
            for PACKAGE in $PACKAGES; do
                # Extract the name field from the package.json file
                if [ -f "$PACKAGE" ]; then
                    NAME=$(jq -r '.name' "$PACKAGE")
                    if [ "$NAME" != "null" ]; then
                        PACKAGE_NAMES+=("$NAME")
                    fi
                fi
            done

            # Convert the array of package names to a JSON array
            # PACKAGE_NAMES_JSON=$(jq -n --argjson names "$(echo "${PACKAGE_NAMES[@]}" | jq -R -s -c 'split(" ")')" '$names')
            PACKAGE_NAMES_JSON=$(jq -n --argjson names "$(printf '%s\0' "${PACKAGE_NAMES[@]}" | jq -R -s -c 'split("\u0000")[:-1]')" '$names')
            echo "dependencies = $PACKAGE_NAMES_JSON"

            



        shell: bash
  
  build:
    needs: find_packages
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.find_packages.outputs.matrix)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Current package
        run: |
            DEPENDENCIES_JSON='${{ needs.find_packages.outputs.dependencies }}'
            # DEPS_JSON=$(echo $DEPENDENCIES_JSON | jq -c '.["${{ matrix.package }}"]')
            echo "current package: ${{ matrix.package }}" # with dependencies: $DEPS_JSON
        